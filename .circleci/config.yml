{
   "jobs" : {
      "build" : {
         "environment" : {
            "CIRCLE_ARTIFACTS" : "/tmp/circle-artifacts/build"
         },
         "machine" : {
            "image" : "ubuntu-2004:202008-01"
         },
         "steps" : [
            "checkout",
            {
               "run" : {
                  "command" : "mkdir -p $CIRCLE_ARTIFACTS"
               }
            },
            {
               "run" : {
                  "command" : "docker info"
               }
            },
            {
               "run" : {
                  "background" : true,
                  "command" : "docker pull mariadb && docker pull minio/minio && docker pull quay.io/wakaba/chromedriver:stable && docker pull quay.io/wakaba/docker-perl-app-base"
               }
            },
            {
               "run" : {
                  "command" : "make deps-circleci"
               }
            },
            {
               "run" : {
                  "command" : "docker info"
               }
            },
            {
               "run" : {
                  "command" : "docker build -t quay.io/wakaba/accounts ."
               }
            },
            {
               "store_artifacts" : {
                  "path" : "/tmp/circle-artifacts/build"
               }
            },
            {
               "run" : {
                  "command" : "mkdir -p .ciconfigtemp/dockerimages/quay.io/wakaba/"
               }
            },
            {
               "run" : {
                  "command" : "docker save -o .ciconfigtemp/dockerimages/quay.io/wakaba/accounts.tar quay.io/wakaba/accounts"
               }
            },
            {
               "persist_to_workspace" : {
                  "paths" : [
                     ".ciconfigtemp",
                     "deps",
                     "local",
                     "perl",
                     "prove",
                     "plackup",
                     "lserver",
                     "local-server",
                     "rev"
                  ],
                  "root" : "./"
               }
            }
         ]
      },
      "deploy_master" : {
         "machine" : {
            "image" : "ubuntu-2004:202008-01"
         },
         "steps" : [
            "checkout",
            {
               "attach_workspace" : {
                  "at" : "./"
               }
            },
            {
               "run" : {
                  "command" : "docker load -i .ciconfigtemp/dockerimages/quay.io/wakaba/accounts.tar"
               }
            },
            {
               "deploy" : {
                  "command" : "docker login -e $DOCKER_EMAIL -u $DOCKER_USER -p $DOCKER_PASS quay.io || docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io"
               }
            },
            {
               "deploy" : {
                  "command" : "docker push quay.io/wakaba/accounts && curl -sSLf $BWALL_URL -X POST"
               }
            },
            {
               "deploy" : {
                  "command" : "git config --global user.email \u0022temp@circleci.test\u0022\u000Agit config --global user.name \u0022CircleCI\u0022"
               }
            },
            {
               "deploy" : {
                  "command" : "git checkout --orphan herokucommit && git commit -m \u0022Heroku base commit\u0022"
               }
            },
            {
               "deploy" : {
                  "command" : "git clone $KEYS_REPO_URL local/keys"
               }
            },
            {
               "deploy" : {
                  "command" : "make create-commit-for-heroku-circleci"
               }
            },
            {
               "deploy" : {
                  "command" : "git push git@heroku.com:$HEROKU_APP_NAME.git \u002B`git rev-parse HEAD`:refs/heads/master"
               }
            }
         ]
      },
      "deploy_nightly" : {
         "machine" : {
            "image" : "ubuntu-2004:202008-01"
         },
         "steps" : [
            "checkout",
            {
               "attach_workspace" : {
                  "at" : "./"
               }
            },
            {
               "run" : {
                  "command" : "docker load -i .ciconfigtemp/dockerimages/quay.io/wakaba/accounts.tar"
               }
            },
            {
               "deploy" : {
                  "command" : "git rev-parse HEAD > head.txt\u000Acurl -f -s -S --request POST --header \u0022Authorization:token $GITHUB_ACCESS_TOKEN\u0022 --header \u0022Content-Type:application/json\u0022 --data-binary \u0022{\u005C\u0022base\u005C\u0022:\u005C\u0022master\u005C\u0022,\u005C\u0022head\u005C\u0022:\u005C\u0022`cat head.txt`\u005C\u0022,\u005C\u0022commit_message\u005C\u0022:\u005C\u0022auto-merge $CIRCLE_BRANCH into master\u005C\u0022}\u0022 \u0022https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/merges\u0022 && curl -f https://$BWALL_TOKEN:@$BWALL_HOST/ping/merger.$CIRCLE_BRANCH/$CIRCLE_PROJECT_USERNAME%2F$CIRCLE_PROJECT_REPONAME -X POST"
               }
            }
         ]
      },
      "deploy_staging" : {
         "machine" : {
            "image" : "ubuntu-2004:202008-01"
         },
         "steps" : [
            "checkout",
            {
               "attach_workspace" : {
                  "at" : "./"
               }
            },
            {
               "run" : {
                  "command" : "docker load -i .ciconfigtemp/dockerimages/quay.io/wakaba/accounts.tar"
               }
            },
            {
               "deploy" : {
                  "command" : "git rev-parse HEAD > head.txt\u000Acurl -f -s -S --request POST --header \u0022Authorization:token $GITHUB_ACCESS_TOKEN\u0022 --header \u0022Content-Type:application/json\u0022 --data-binary \u0022{\u005C\u0022base\u005C\u0022:\u005C\u0022master\u005C\u0022,\u005C\u0022head\u005C\u0022:\u005C\u0022`cat head.txt`\u005C\u0022,\u005C\u0022commit_message\u005C\u0022:\u005C\u0022auto-merge $CIRCLE_BRANCH into master\u005C\u0022}\u0022 \u0022https://api.github.com/repos/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/merges\u0022 && curl -f https://$BWALL_TOKEN:@$BWALL_HOST/ping/merger.$CIRCLE_BRANCH/$CIRCLE_PROJECT_USERNAME%2F$CIRCLE_PROJECT_REPONAME -X POST"
               }
            }
         ]
      },
      "gaa4" : {
         "machine" : {
            "image" : "ubuntu-2004:202008-01"
         },
         "steps" : [
            "checkout",
            {
               "run" : {
                  "command" : "git config --global user.email \u0022temp@circleci.test\u0022;git config --global user.name \u0022CircleCI\u0022"
               }
            },
            {
               "run" : {
                  "command" : "make deps"
               }
            },
            {
               "run" : {
                  "command" : "make updatenightly"
               }
            },
            {
               "deploy" : {
                  "command" : "git commit -m auto"
               }
            },
            {
               "deploy" : {
                  "command" : "git push origin \u002B`git rev-parse HEAD`:refs/heads/nightly"
               }
            }
         ]
      },
      "test" : {
         "environment" : {
            "CIRCLE_ARTIFACTS" : "/tmp/circle-artifacts/test"
         },
         "machine" : {
            "image" : "ubuntu-2004:202008-01"
         },
         "parallelism" : 2,
         "steps" : [
            "checkout",
            {
               "attach_workspace" : {
                  "at" : "./"
               }
            },
            {
               "run" : {
                  "command" : "docker load -i .ciconfigtemp/dockerimages/quay.io/wakaba/accounts.tar"
               }
            },
            {
               "run" : {
                  "command" : "mkdir -p $CIRCLE_ARTIFACTS"
               }
            },
            {
               "run" : {
                  "command" : "make test-deps-circleci"
               }
            },
            {
               "run" : {
                  "command" : "docker run quay.io/wakaba/accounts which ssh-keygen"
               }
            },
            {
               "run" : {
                  "command" : "docker run quay.io/wakaba/accounts which /server"
               }
            },
            {
               "run" : {
                  "command" : "docker run quay.io/wakaba/accounts which /setup-db-for-test"
               }
            },
            {
               "run" : {
                  "command" : "docker run quay.io/wakaba/accounts /showrev"
               }
            },
            {
               "run" : {
                  "command" : "mkdir x"
               }
            },
            {
               "run" : {
                  "command" : "echo '{}' > x/servers.json"
               }
            },
            {
               "run" : {
                  "command" : "echo '{\u0022servers_json_file\u0022:\u0022servers.json\u0022}' > x/config.json"
               }
            },
            {
               "run" : {
                  "command" : "docker run -d -v `pwd`/x:/x -e APP_CONFIG=/x/config.json -p 6533:8080 quay.io/wakaba/accounts"
               }
            },
            {
               "run" : {
                  "command" : "while ! curl http://localhost:6533/robots.txt ; do sleep 1; done"
               }
            },
            {
               "run" : {
                  "command" : "curl http://localhost:6533/robots.txt --dump-header - --fail"
               }
            },
            {
               "run" : {
                  "command" : "rm -fr $CIRCLE_ARTIFACTS/ss.pid"
               }
            },
            {
               "run" : {
                  "background" : true,
                  "command" : "IS_BROWSER_TEST=1 SS_DEBUG_SERVERS=app_docker TEST_APP_DOCKER_IMAGE=quay.io/wakaba/accounts ./perl t_deps/bin/env-for-circleci.pl > $CIRCLE_ARTIFACTS/servers-http-$CIRCLE_NODE_INDEX.txt.dat 2>&1"
               }
            },
            {
               "run" : {
                  "command" : "while [ ! -e $CIRCLE_ARTIFACTS/ss.pid ]; do sleep 1; done"
               }
            },
            {
               "run" : {
                  "command" : "if [ ! -e $CIRCLE_ARTIFACTS/ss.pid ]; then cat $CIRCLE_ARTIFACTS/ss.env; fi; cat $CIRCLE_ARTIFACTS/ss.pid"
               }
            },
            {
               "run" : {
                  "command" : "SS_ENV_FILE=$CIRCLE_ARTIFACTS/ss.env make test-circle"
               }
            },
            {
               "run" : {
                  "command" : "true"
               }
            },
            {
               "store_artifacts" : {
                  "path" : "/tmp/circle-artifacts/test"
               }
            }
         ]
      }
   },
   "version" : 2,
   "workflows" : {
      "build" : {
         "jobs" : [
            "build",
            {
               "test" : {
                  "requires" : [
                     "build"
                  ]
               }
            },
            {
               "deploy_master" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "master"
                        ]
                     }
                  },
                  "requires" : [
                     "build",
                     "test"
                  ]
               }
            },
            {
               "deploy_nightly" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "nightly"
                        ]
                     }
                  },
                  "requires" : [
                     "build",
                     "test"
                  ]
               }
            },
            {
               "deploy_staging" : {
                  "context" : [
                     "deploy-context"
                  ],
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "staging"
                        ]
                     }
                  },
                  "requires" : [
                     "build",
                     "test"
                  ]
               }
            }
         ]
      },
      "gaa4" : {
         "jobs" : [
            "gaa4"
         ],
         "triggers" : [
            {
               "schedule" : {
                  "cron" : "37 16 * * *",
                  "filters" : {
                     "branches" : {
                        "only" : [
                           "staging"
                        ]
                     }
                  }
               }
            }
         ]
      },
      "version" : 2
   }
}
