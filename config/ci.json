{
  "circleci": {
    "merger": 1,
    "gaa": 1,
    "required_docker_images": [
      "mariadb",
      "minio/minio",
      "quay.io/wakaba/chromedriver:stable",
      "quay.io/wakaba/docker-perl-app-base"
    ],
    "docker-build": "quay.io/wakaba/accounts",
    "heroku": {
      "prepare": [
        "git clone $KEYS_REPO_URL local/keys"
      ]
    },

    "build": [
      "make deps-circleci"
    ],

    "tests": [
      "docker run quay.io/wakaba/accounts which ssh-keygen",
      "docker run quay.io/wakaba/accounts which /server",
      "docker run quay.io/wakaba/accounts which /setup-db-for-test",
      "docker run quay.io/wakaba/accounts /showrev",

      "mkdir x",
      "echo '{}' > x/servers.json",
      "echo '{\u0022servers_json_file\u0022:\u0022servers.json\u0022}' > x/config.json",
      "docker run -d -v `pwd`/x:/x -e APP_CONFIG=/x/config.json -p 6533:8080 quay.io/wakaba/accounts",
      "while ! curl http://localhost:6533/robots.txt ; do sleep 1; done",
      "curl http://localhost:6533/robots.txt --dump-header - --fail",

      "rm -fr $CIRCLE_ARTIFACTS/ss.pid",
      {"IS_BROWSER_TEST=1 TEST_APP_DOCKER_IMAGE=quay.io/wakaba/accounts ./perl t_deps/bin/env-for-circleci.pl > $CIRCLE_ARTIFACTS/servers-http-$CIRCLE_NODE_INDEX.txt.dat 2>&1": {
        "background": true}},
      "while [ ! -e $CIRCLE_ARTIFACTS/ss.pid ]; do sleep 1; done",
      "if [ ! -e $CIRCLE_ARTIFACTS/ss.pid ]; then cat $CIRCLE_ARTIFACTS/ss.env; fi; cat $CIRCLE_ARTIFACTS/ss.pid",

      "SS_ENV_FILE=$CIRCLE_ARTIFACTS/ss.env make test-circle",

      "true"
    ]
    
  }
}
